name: Build and push PR image to quay.io
on:
  pull_request_target

env:
  REGISTRY_USER: netobserv+github_ci
  REGISTRY_PASSWORD: ${{ secrets.QUAY_SECRET }}
  REGISTRY: quay.io/netobserv
  IMAGE: network-observability-console-plugin
  ALLOWED_USERS: mariomac jotak jpinsonneau OlivierCazade eranra KalmanMeth ronensc

jobs:
  push-pr-image:
    name: push PR image
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        go: ['1.17']
    steps:
      - name: install make
        run: sudo apt-get install make
      - name: set up go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - name: validate user
        id: validate_user
        run: |
          allowed=(${{ env.ALLOWED_USERS }})
          for user in ${allowed[@]}; do
            if [[ "${{ github.event.pull_request.user.login }}" == "$user" ]]; then
                echo "$user is a known user, proceeding to build."
                exit 0
            fi
          done
          echo "User ${{ github.event.pull_request.user.login }} is unknown, PR image build canceled."
          exit 1
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
      - name: build images
        run: IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE }}:temp" make sha-image
      - name: podman login to quay.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          registry: quay.io
      - name: get short sha
        id: shortsha
        run: echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
      - name: push to quay.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.IMAGE }}
          tags: ${{ steps.shortsha.outputs.short_sha }}
          registry: ${{ env.REGISTRY }}
      - uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'New image: ${{ steps.push-to-quay.outputs.registry-paths }}'
            })
